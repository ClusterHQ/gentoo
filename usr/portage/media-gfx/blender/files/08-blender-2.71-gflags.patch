--- ./CMakeLists.txt	2014-07-15 17:30:36.608718963 -0400
+++ ./CMakeLists.txt	2014-07-15 17:25:24.940615350 -0400
@@ -116,6 +116,7 @@
 # Check for some modules
 if(UNIX)
   find_package(PkgConfig)
+  find_package(gflags REQUIRED)
   pkg_check_modules(_PC_EIGEN3 eigen3)
   pkg_check_modules(_PC_GFLAGS libgflags)
   pkg_check_modules(_PC_GLOG libglog)
--- extern/libmv/CMakeLists.txt	2014-07-15 17:30:36.565719500 -0400
+++ extern/libmv/CMakeLists.txt	2014-07-15 17:25:06.388847279 -0400
@@ -208,7 +208,7 @@
 
 include_directories(${_PC_GFLAGS_INCLUDE_DIRS} ${_PC_GLOG_INCLUDE_DIRS})
 blender_add_lib(extern_libmv "${SRC}" "${INC}" "${INC_SYS}")
-target_link_libraries(extern_libmv ${_PC_GFLAGS_LIBRARIES} ${_PC_GLOG_LIBRARIES})
+target_link_libraries(extern_libmv ${gflags_LIBRARIES} ${_PC_GLOG_LIBRARIES})
 

 if(WITH_LIBMV)
--- extern/libmv/libmv-capi.cc	2014-06-25 16:43:52.000000000 -0400
+++ extern/libmv/libmv-capi.cc	2014-07-15 09:29:04.332922116 -0400
@@ -112,18 +112,18 @@
 	         google::GLOG_FATAL);
 
 	google::InitGoogleLogging(argv0);
-	google::SetCommandLineOption("logtostderr", "1");
-	google::SetCommandLineOption("v", "0");
-	google::SetCommandLineOption("stderrthreshold", severity_fatal);
-	google::SetCommandLineOption("minloglevel", severity_fatal);
+	gflags::SetCommandLineOption("logtostderr", "1");
+	gflags::SetCommandLineOption("v", "0");
+	gflags::SetCommandLineOption("stderrthreshold", severity_fatal);
+	gflags::SetCommandLineOption("minloglevel", severity_fatal);
 }
 
 void libmv_startDebugLogging(void)
 {
-	google::SetCommandLineOption("logtostderr", "1");
-	google::SetCommandLineOption("v", "2");
-	google::SetCommandLineOption("stderrthreshold", "1");
-	google::SetCommandLineOption("minloglevel", "0");
+	gflags::SetCommandLineOption("logtostderr", "1");
+	gflags::SetCommandLineOption("v", "2");
+	gflags::SetCommandLineOption("stderrthreshold", "1");
+	gflags::SetCommandLineOption("minloglevel", "0");
 }
 
 void libmv_setLoggingVerbosity(int verbosity)
@@ -131,7 +131,7 @@
 	char val[10];
 	snprintf(val, sizeof(val), "%d", verbosity);
 
-	google::SetCommandLineOption("v", val);
+	gflags::SetCommandLineOption("v", val);
 }
 
 /* ************ Planar tracker ************ */
