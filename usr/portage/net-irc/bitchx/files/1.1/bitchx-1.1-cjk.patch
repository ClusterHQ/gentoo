diff -ruN include/color.h.orig include/color.h
--- include/color.h.orig	Tue Mar  6 04:38:48 2001
+++ include/color.h	Tue Jun 18 04:24:21 2002
@@ -386,15 +386,15 @@
 
 #define DEFAULT_INPUT_PROMPT "[1;30;40mÀ-[[1;37mb[0;37mitch[0;36mx[1;30m]Ä>[0;37m "
 
-#ifndef ONLY_STD_CHARS
-#define DEFAULT_SHOW_NUMERICS_STR "[1;30mù[0m[1;36mí[1;30mù[0m"
-#else
-#ifndef LATIN1
+//#ifndef ONLY_STD_CHARS
+//#define DEFAULT_SHOW_NUMERICS_STR "[1;30mù[0m[1;36mí[1;30mù[0m"
+//#else
+//#ifndef LATIN1
-#define DEFAULT_SHOW_NUMERICS_STR "***"
-#else
+//#else
+//#define DEFAULT_SHOW_NUMERICS_STR "[1;30m-[0m[1;36m:[1;30m-[0m"
 #define DEFAULT_SHOW_NUMERICS_STR "[1;30m-[0m[1;36m:[1;30m-[0m"
-#endif
-#endif
+//#endif
+//#endif
 
 
 #define DEFAULT_SERVER_PROMPT "%K[%c$0%K] "
diff -ruN include/config.h.orig include/config.h
--- include/config.h.orig	Tue Jun 18 04:23:31 2002
+++ include/config.h	Tue Jun 18 04:24:21 2002
@@ -195,7 +195,7 @@
  * we define the default network type for server groups. Do not just
  * undefine this.
  */
- #define DEFAULT_NETWORK "efnet"
+ #define DEFAULT_NETWORK "openprojects"
 
 /*
  * Below are the IRCII variable defaults.  For boolean variables, use 1 for
@@ -309,7 +309,7 @@
  * This is recommended when you want to start BitchX in an xterm without
  * the usage of the special "vga"-font. 
  */
-#undef ONLY_STD_CHARS
+#define ONLY_STD_CHARS 1
 
 /*
  * Normally BitchX uses only the IBMPC (cp437) charset.
@@ -342,7 +342,7 @@
  * when you've defined LATIN1. The problem is that ansi graphics will look
  * ugly if you use the scroll up feature (PageUp/PageDown)
  */
-#undef ASCII_LOGO
+#define ASCII_LOGO
 
 /* If you define REVERSE_WHITE_BLACK, then the format codes for black and
  * white color are revepsed. (%W, %w is bold black and black, %K, %k is bold
diff -ruN include/irc.h.orig include/irc.h
--- include/irc.h.orig	Sun Mar 24 18:31:04 2002
+++ include/irc.h	Tue Jun 18 04:24:21 2002
@@ -14,6 +14,7 @@
 #define IRCII_COMMENT   "\002 Keep it to yourself!\002"
 
 #define FSET 1
+#define ishangul(c) ((((unsigned char)(c)) >= 0xa1) && (((unsigned char)(c)) <= 0xfe))
 
 #ifndef __irc_c
 extern const char irc_version[];
diff -ruN source/input.c.orig source/input.c
--- source/input.c.orig	Sun Mar 24 18:31:06 2002
+++ source/input.c	Tue Jun 18 04:24:21 2002
@@ -94,6 +94,7 @@
 #define MIN_CHAR 		INPUT_BUFFER[MIN_POS]
 #define PREV_CHAR 		INPUT_BUFFER[THIS_POS-1]
 #define NEXT_CHAR 		INPUT_BUFFER[THIS_POS+1]
+#define NTH_CHAR(offset)        INPUT_BUFFER[THIS_POS+(offset)]
 #define ADD_TO_INPUT(x) 	strmcat(INPUT_BUFFER, (x), INPUT_BUFFER_SIZE);
 #define INPUT_ONSCREEN 		current_screen->input_visible
 #define INPUT_VISIBLE 		INPUT_BUFFER[INPUT_ONSCREEN]
@@ -478,6 +479,11 @@
 	cursor_to_input();
 	if (dir)
 	{
+                        if (NEXT_CHAR && ishangul(THIS_CHAR) && ishangul(NEXT_CHAR))
+                        {
+                                THIS_POS++;
+                                term_cursor_right();
+                        }
 		if (THIS_CHAR)
 		{
 			THIS_POS++;
@@ -490,6 +496,11 @@
 		{
 			THIS_POS--;
 			term_cursor_left();
+                        if (THIS_POS > MIN_POS && ishangul(THIS_CHAR) && ishangul(PREV_CHAR))
+                        {
+                                THIS_POS--;
+                                term_cursor_left();
+                        }
 		}
 	}
 	update_input(NO_UPDATE);
@@ -584,24 +595,35 @@
 BUILT_IN_KEYBINDING(input_delete_character)
 {
 int	pos;
+	int hangul_deleted = 0 ;
+	int count = 1 ;
+
 	cursor_to_input();
 	in_completion = STATE_NORMAL;
-	if (!THIS_CHAR)
-		return;	
-	ov_strcpy(&THIS_CHAR, &NEXT_CHAR);
-	if (!(termfeatures & TERM_CAN_DELETE))
-		update_input(UPDATE_FROM_CURSOR);
-	else
-	{
-		term_delete(1);
-		pos = INPUT_ONSCREEN + last_input_screen->co - 1;
-		if (pos < strlen(INPUT_BUFFER))
+        if (ishangul(THIS_CHAR)) {
+                hangul_deleted = 1;
+                ov_strcpy(&THIS_CHAR, &(NTH_CHAR(2)));
+        } else {
+                ov_strcpy(&THIS_CHAR, &(NEXT_CHAR));
+        }
+
+	if (hangul_deleted) count = 2 ;
+
+	while (count -- > 0) {
+		if (!(termfeatures & TERM_CAN_DELETE))
+			update_input(UPDATE_FROM_CURSOR);
+		else
 		{
-			term_move_cursor(last_input_screen->co - 1, INPUT_LINE);
-			term_putchar(INPUT_BUFFER[pos]);
-			term_move_cursor(INPUT_CURSOR, INPUT_LINE);
+			term_delete(1);
+			pos = INPUT_ONSCREEN + last_input_screen->co - 1;
+			if (pos < strlen(INPUT_BUFFER))
+			{
+				term_move_cursor(last_input_screen->co - 1, INPUT_LINE);
+				term_putchar(INPUT_BUFFER[pos]);
+				term_move_cursor(INPUT_CURSOR, INPUT_LINE);
+			}
+			update_input(NO_UPDATE);
 		}
-		update_input(NO_UPDATE);
 	}
 }
 
@@ -613,7 +635,11 @@
 	{
 		char	*ptr = NULL;
 		int	pos;
+		int	count = 1 ;
+
+                if (ishangul(PREV_CHAR)) count = 2;
 
+		while (count-- > 0) {
 		ptr = LOCAL_COPY(&THIS_CHAR);
 		strcpy(&(PREV_CHAR), ptr);
 		THIS_POS--;
@@ -650,6 +676,7 @@
 			update_input(UPDATE_FROM_CURSOR);
 #endif
 		}
+		}
 	}
 	if (THIS_POS == MIN_POS)
 		HOLDLAST = NULL;
@@ -688,6 +715,7 @@
 {
 	cursor_to_input();
 	THIS_POS = strlen(INPUT_BUFFER);
+	if (ishangul(THIS_CHAR)) THIS_POS-- ;
 	update_input(UPDATE_JUST_CURSOR);
 }
 
diff -ruN source/ircaux.c.orig source/ircaux.c
--- source/ircaux.c.orig	Thu Feb 28 13:22:49 2002
+++ source/ircaux.c	Tue Jun 18 04:24:21 2002
@@ -1040,7 +1040,7 @@
 		return NULL;
 
 	for (s = nick; *s && (s - nick) < NICKNAME_LEN ; s++, len++)
-		if (!islegal(*s) || my_isspace(*s))
+		if (*s >= 0 && (!islegal(*s) || my_isspace(*s)))
 			break;
 	*s = '\0';
 	
diff -ruN source/misc.c.orig source/misc.c
--- source/misc.c.orig	Tue Jun 18 05:02:03 2002
+++ source/misc.c	Tue Jun 18 05:02:17 2002
@@ -4542,7 +4542,7 @@
 				tmpc++;
 				continue;
 			}
-#if 1
+#if 0
 /* do we really wanna do this? */
 			else if (*tmpc == '^') /* ibmpc charset */
 			{

diff -ruN source/output.c.orig source/output.c
--- source/output.c.orig	Tue Jun 18 05:00:46 2002
+++ source/output.c	Tue Jun 18 05:01:52 2002
@@ -53,17 +53,17 @@
 
 void charset_ibmpc (void)
 {
-	fwrite("\033(U", 3, 1, current_ftarget);	/* switch to IBM code page 437 */
+	/*fwrite("\033(U", 3, 1, current_ftarget);*/	/* switch to IBM code page 437 */
 }
 
 void charset_lat1 (void)
 {
-	fwrite("\033(B", 3, 1, current_ftarget);	/* switch to Latin-1 (ISO 8859-1) */
+	/*fwrite("\033(B", 3, 1, current_ftarget);*/	/* switch to Latin-1 (ISO 8859-1) */
 }
 
 void charset_cst(void)
 {
-	fwrite("\033(K", 3, 1, current_ftarget); /* switch too user-defined */
+	/*fwrite("\033(K", 3, 1, current_ftarget);*/ /* switch too user-defined */
 }
 
 /* currently not used. */
@@ -75,9 +75,9 @@
 #if !defined(WINNT) && !defined(__EMX__)
 
 #if defined(HARD_UNFLASH) && !defined(CHARSET_CUSTOM)
-	fwrite("\033c", 5, 1, current_ftarget);		/* hard reset */
+	/*fwrite("\033c", 5, 1, current_ftarget);*/		/* hard reset */
 #else
-	fwrite("\033)0", 6, 1, current_ftarget);		/* soft reset */
+	/*fwrite("\033)0", 6, 1, current_ftarget);*/		/* soft reset */
 #endif
 
 #if defined(LATIN1)

