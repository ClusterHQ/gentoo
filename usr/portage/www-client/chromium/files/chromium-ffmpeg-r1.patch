--- third_party/ffmpeg/chromium/scripts/build_ffmpeg.py.orig	2014-06-11 10:13:47.246416916 +0000
+++ third_party/ffmpeg/chromium/scripts/build_ffmpeg.py	2014-06-11 10:19:55.333739033 +0000
@@ -170,12 +170,13 @@
                     'is not necessary for generate_gyp.py')
   options, args = parser.parse_args(argv)
 
-  if len(args) != 2:
+  if len(args) < 2:
     parser.print_help()
     return 1
 
   target_os = args[0]
   target_arch = args[1]
+  configure_args = args[2:]
 
   if target_os not in ('linux', 'linux-noasm', 'win', 'win-vs2013', 'mac'):
     parser.print_help()
@@ -429,9 +430,9 @@
       BuildFFmpeg, target_os, target_arch, host_os, host_arch, parallel_jobs,
       options.config_only)
   do_build_ffmpeg(
-      'Chromium', configure_flags['Common'] + configure_flags['Chromium'])
+      'Chromium', configure_flags['Common'] + configure_flags['Chromium'] + configure_args)
   do_build_ffmpeg(
-      'Chrome', configure_flags['Common'] + configure_flags['Chrome'])
+      'Chrome', configure_flags['Common'] + configure_flags['Chrome'] + configure_args)
 
   if target_os == 'linux':
     do_build_ffmpeg('ChromiumOS',
--- third_party/ffmpeg/chromium/scripts/generate_gyp.py.orig	2014-06-13 13:13:35.762996021 +0000
+++ third_party/ffmpeg/chromium/scripts/generate_gyp.py	2014-06-13 13:13:38.693099249 +0000
@@ -131,7 +131,7 @@
 """
 
 # Controls GYP conditional stanza generation.
-SUPPORTED_ARCHITECTURES = ['ia32', 'arm', 'arm-neon']
+SUPPORTED_ARCHITECTURES = ['ia32', 'arm', 'arm-neon', 'x64']
 SUPPORTED_TARGETS = ['Chromium', 'Chrome', 'ChromiumOS', 'ChromeOS']
 # Mac doesn't have any platform specific files, so just use linux and win.
 SUPPORTED_PLATFORMS = ['linux', 'win']
