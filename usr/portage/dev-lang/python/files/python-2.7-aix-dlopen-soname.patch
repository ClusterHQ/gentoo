With libtool, we have shared object file "shr.o" as archive member on AIX,
see bug#213277 for more details.

--- Python/dynload_shlib.c.orig	2014-04-11 15:44:19 +0200
+++ Python/dynload_shlib.c	2014-04-11 16:25:18 +0200
@@ -161,6 +161,29 @@
 
     handle = dlopen(pathname, dlopenflags);
 
+#ifdef RTLD_MEMBER
+    if (handle == NULL && errno == ENOEXEC) {
+        /* Exec format error: File exists, try libtool's "aix-soname" variant. */
+#       ifdef __64BIT__
+#           define shr_o "(shr_64.o)"
+#       else
+#           define shr_o "(shr.o)"
+#       endif
+        char *buf = malloc(strlen(pathname) + strlen(shr_o) + 1);
+        if (buf != NULL) {
+            sprintf(buf, "%s%s", pathname, shr_o);
+            dlopenflags |= RTLD_MEMBER;
+
+            if (Py_VerboseFlag)
+                PySys_WriteStderr("dlopen(\"%s\", %x);\n", buf,
+                          dlopenflags);
+
+            handle = dlopen(buf, dlopenflags);
+            free(buf);
+        }
+    }
+#endif
+
     if (handle == NULL) {
         const char *error = dlerror();
         if (error == NULL)
--- Modules/dlmodule.c.orig	2014-04-11 16:32:39 +0200
+++ Modules/dlmodule.c	2014-04-11 16:34:59 +0200
@@ -185,6 +185,25 @@
 #endif
     }
     handle = dlopen(name, mode);
+
+#ifdef RTLD_MEMBER
+    if (handle == NULL && errno == ENOEXEC) {
+        /* Exec format error: File exists, try libtool's "aix-soname" variant. */
+#       ifdef __64BIT__
+#           define shr_o "(shr_64.o)"
+#       else
+#           define shr_o "(shr.o)"
+#       endif
+        char *buf = malloc(strlen(name) + strlen(shr_o) + 1);
+        if (buf != NULL) {
+            sprintf(buf, "%s%s", name, shr_o);
+            mode |= RTLD_MEMBER;
+            handle = dlopen(buf, mode);
+            free(buf);
+        }
+    }
+#endif
+
     if (handle == NULL) {
         char *errmsg = dlerror();
         if (!errmsg)
