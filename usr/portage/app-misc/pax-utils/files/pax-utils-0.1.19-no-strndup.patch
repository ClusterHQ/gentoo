http://bugs.gentoo.org/249731

committed upstream >0.1.19

Index: scanelf.c
===================================================================
RCS file: /var/cvsroot/gentoo-projects/pax-utils/scanelf.c,v
retrieving revision 1.207
retrieving revision 1.208
diff -u -r1.207 -r1.208
--- scanelf.c	30 Dec 2008 13:38:35 -0000	1.207
+++ scanelf.c	31 Jan 2009 17:58:37 -0000	1.208
@@ -1038,7 +1038,7 @@
 							++this_sym; \
 						} \
 						if (next_sym) /* Copy it so that we don't have to worry about the final , */ \
-							this_sym = strndup(this_sym, next_sym-this_sym); \
+							this_sym = xstrndup(this_sym, next_sym-this_sym); \
 						/* ok, lets compare the name now */ \
 						if (scanelf_match_symname(this_sym, symname)) { \
 							if (be_semi_verbose) { \
Index: xfuncs.c
===================================================================
RCS file: /var/cvsroot/gentoo-projects/pax-utils/xfuncs.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -r1.3 -r1.4
--- xfuncs.c	30 Dec 2008 13:00:29 -0000	1.3
+++ xfuncs.c	31 Jan 2009 17:58:37 -0000	1.4
@@ -16,6 +16,32 @@
 	return ret;
 }
 
+#ifndef strndup
+static inline char *my_strndup(const char *str, size_t n)
+{
+	size_t r;
+	char *ret;
+	for (r = 0; r < n; ++r)
+		if (!str[r])
+			break;
+
+	ret = xmalloc(r + 1);
+	memcpy(ret, str, r);
+	ret[r] = '\0';
+	return ret;
+}
+/* do this to avoid warning: declaration of 'strndup' shadows a built-in
+ * function */
+#define strndup(S, N) my_strndup(S, N)
+#endif
+
+char *xstrndup(const char *s, const size_t n)
+{
+	char *ret = strndup(s, n);
+	if (!ret) err("Could not strdup(): %s", strerror(errno));
+	return ret;
+}
+
 void *xmalloc(size_t size);
 void *xmalloc(size_t size)
 {
Index: xfuncs.h
===================================================================
RCS file: /var/cvsroot/gentoo-projects/pax-utils/xfuncs.h,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -r1.2 -r1.3
--- xfuncs.h	30 Dec 2008 12:58:08 -0000	1.2
+++ xfuncs.h	31 Jan 2009 17:58:37 -0000	1.3
@@ -11,6 +11,7 @@
 #define __XFUNCS_H__
 
 char *xstrdup(const char *s);
+char *xstrndup(const char *s, const size_t n);
 void *xmalloc(size_t size);
 void *xzalloc(size_t size);
 void *xrealloc(void *ptr, size_t size);
