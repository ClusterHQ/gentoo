Index: tsclient-2.0.1/configure.ac
===================================================================
--- tsclient-2.0.1.orig/configure.ac
+++ tsclient-2.0.1/configure.ac
@@ -32,7 +32,7 @@ AM_PROG_LIBTOOL
 
 ### get cflags and libs
 
-PKG_CHECK_MODULES(TSC, glib-2.0 gmodule-2.0 gobject-2.0 gtk+-2.0 libglade-2.0 libgnome-2.0 gnome-desktop-2.0 gnome-vfs-2.0 libnotify gconf-2.0 libnm_glib)
+PKG_CHECK_MODULES(TSC, glib-2.0 gmodule-2.0 gobject-2.0 gtk+-2.0 libglade-2.0 libgnome-2.0 gnome-desktop-2.0 gnome-vfs-2.0 libnotify gconf-2.0)
 TSC_CFLAGS="-Wall $TSC_CFLAGS"
 
 ### Internationalization support
Index: tsclient-2.0.1/src/Makefile.am
===================================================================
--- tsclient-2.0.1.orig/src/Makefile.am
+++ tsclient-2.0.1/src/Makefile.am
@@ -36,7 +36,6 @@ tsclient_SOURCES =				\
 	tsc-main.c				\
 	tsc-marshal.c				\
 	tsc-manager.c				\
-	tsc-network.c				\
 	tsc-provider.c				\
 	tsc-spawn.c				\
 	tsc-util.c				\
Index: tsclient-2.0.1/src/tsc-connection.c
===================================================================
--- tsclient-2.0.1.orig/src/tsc-connection.c
+++ tsclient-2.0.1/src/tsc-connection.c
@@ -167,10 +167,6 @@ tsc_connection_start (TSCConnection *con
 		return TRUE;
 	}
 
-	if (!tsc_network_wait ()) {
-		g_set_error (&my_error, TSC_ERROR, TSC_ERROR, _("Network connection is not available."));
-	}
-
 	class = TSC_CONNECTION_GET_CLASS (connection);
 	if (class->start == NULL) {
 		g_set_error (&my_error, TSC_ERROR, TSC_ERROR, "Start method not implemented");
