Solaris comes with mlib, and the code that is written for it actually
compiles as well, so we need to link against mlib as well, if it was
found.

https://bugs.xine-project.org/show_bug.cgi?id=484

--- src/xine-engine/Makefile.am
+++ src/xine-engine/Makefile.am
@@ -43,7 +43,7 @@
 libxine_la_LIBADD = $(PTHREAD_LIBS) $(DYNAMIC_LD_LIBS) $(LTLIBINTL) $(ZLIB_LIBS) \
 		    -lm $(XINEUTILS_LIB) $(YUV_LIB) $(LTLIBICONV) $(FT2_LIBS) $(FONTCONFIG_LIBS) \
                     $(LIBXINEPOSIX) $(RT_LIBS) $(NET_LIBS) $(XDG_BASEDIR_LIBS) \
-                    $(AVUTIL_LIBS)
+                    $(AVUTIL_LIBS) $(MLIB_LIBS)
 
 libxine_la_LDFLAGS = $(LDFLAGS_NOUNDEFINED) $(AM_LDFLAGS) $(def_ldflags) $(GCSECTIONS) \
 	-weak libxine-interface.la \
--- src/xine-engine/Makefile.in
+++ src/xine-engine/Makefile.in
@@ -521,7 +521,7 @@
 libxine_la_LIBADD = $(PTHREAD_LIBS) $(DYNAMIC_LD_LIBS) $(LTLIBINTL) $(ZLIB_LIBS) \
 		    -lm $(XINEUTILS_LIB) $(YUV_LIB) $(LTLIBICONV) $(FT2_LIBS) $(FONTCONFIG_LIBS) \
                     $(LIBXINEPOSIX) $(RT_LIBS) $(NET_LIBS) $(XDG_BASEDIR_LIBS) \
-                    $(AVUTIL_LIBS)
+                    $(AVUTIL_LIBS) $(MLIB_LIBS)
 
 libxine_la_LDFLAGS = $(LDFLAGS_NOUNDEFINED) $(AM_LDFLAGS) $(def_ldflags) $(GCSECTIONS) \
 	-weak libxine-interface.la \
