From fa4f48cccb6c7f4e1afb2ff4b98b906b7d8d4afc Mon Sep 17 00:00:00 2001
From: Chris Wilson <chris@chris-wilson.co.uk>
Date: Wed, 23 Jan 2013 15:04:26 +0000
Subject: xlib: Do not upload the whole image just because we want an entire row

Fixes regression exposed by

commit a73e7ff0186176bc82cd3ae1432c054c1fd3aebd
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sun Jan 6 11:29:27 2013 +0000

    xlib: Simplify source creation by use of map-to-image

but ultimately from

commit 74941f822015cc50cd8477d0cf97f1a70dbff60b
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Jan 2 22:27:55 2013 +0000

    xlib: Use SHM transport for ordinary image uploads

Reported-by: Gökçen Eraslan <gokcen.eraslan@gmail.com>
Reported-by: Guillaume Ayoub <guillaume.ayoub@kozea.fr>
Reported-by: Emmanuel Benisty <benisty.e@gmail.com>
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=59635
Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
---
diff --git a/src/cairo-xlib-source.c b/src/cairo-xlib-source.c
index 24290f7..ca55278 100644
--- a/src/cairo-xlib-source.c
+++ b/src/cairo-xlib-source.c
@@ -1035,7 +1035,13 @@ surface_source (cairo_xlib_surface_t *dst,
 
 	status = _cairo_surface_unmap_image (&xsrc->base, image);
 	if (unlikely (status)) {
-	    cairo_surface_destroy (src);
+	    cairo_surface_destroy (&xsrc->base);
+	    return _cairo_surface_create_in_error (status);
+	}
+
+	status = _cairo_xlib_surface_put_shm (xsrc);
+	if (unlikely (status)) {
+	    cairo_surface_destroy (&xsrc->base);
 	    return _cairo_surface_create_in_error (status);
 	}
     }
diff --git a/src/cairo-xlib-surface.c b/src/cairo-xlib-surface.c
index dbc677e..ee69b66 100644
--- a/src/cairo-xlib-surface.c
+++ b/src/cairo-xlib-surface.c
@@ -1139,26 +1139,24 @@ _cairo_xlib_surface_draw_image (cairo_xlib_surface_t   *surface,
 		max_request_size = XMaxRequestSize (display->display);
 	    if (max_request_size > 8192)
 		max_request_size = 8192;
-	    if (image->stride * image->height > max_request_size) {
+	    if (width * height * 4 > max_request_size) {
 		shm_image = _cairo_xlib_surface_create_shm__image (surface,
 								   image->pixman_format,
-								   image->width,
-								   image->height);
+								   width, height);
 		if (shm_image && shm_image->status == CAIRO_STATUS_SUCCESS) {
 		    cairo_image_surface_t *clone = (cairo_image_surface_t *) shm_image;
-		    if (clone->stride == image->stride) {
-			memcpy (clone->data, image->data, clone->stride * clone->height);
-		    } else {
-			pixman_image_composite32 (PIXMAN_OP_SRC,
-						  image->pixman_image, NULL, clone->pixman_image,
-						  0, 0,
-						  0, 0,
-						  0, 0,
-						  image->width, image->height);
-		    }
+		    pixman_image_composite32 (PIXMAN_OP_SRC,
+					      image->pixman_image, NULL, clone->pixman_image,
+					      src_x, src_y,
+					      0, 0,
+					      0, 0,
+					      width, height);
 		    ximage.obdata = _cairo_xlib_shm_surface_get_obdata (shm_image);
 		    ximage.data = (char *)clone->data;
 		    ximage.bytes_per_line = clone->stride;
+		    ximage.width = width;
+		    ximage.height = height;
+		    src_x = src_y = 0;
 		}
 	    }
 	} else
--
cgit v0.9.0.2-2-gbebe
