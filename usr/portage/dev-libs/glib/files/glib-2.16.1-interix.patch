* mduft@gentoo.org: add support for reading file systems on interix.

http://bugzilla.gnome.org/show_bug.cgi?id=570073

--- glib-2.16.1.orig/gio/gunixmounts.c	2008-03-25 13:39:53 +0100
+++ glib-2.16.1/gio/gunixmounts.c	2008-03-25 14:13:10 +0100
@@ -45,6 +45,11 @@
 #include <string.h>
 #include <signal.h>
 
+#if defined(__INTERIX)
+# include <sys/statvfs.h>
+# include <dirent.h>
+#endif
+
 #include "gunixmounts.h"
 #include "gfile.h"
 #include "gfilemonitor.h"
@@ -592,6 +597,60 @@
   
   return g_list_reverse (return_list);
 }
+#elif defined(__INTERIX)
+
+static char *
+get_mtab_monitor_file (void)
+{
+      return NULL;
+}
+
+static GList *
+_g_get_unix_mounts (void)
+{
+  DIR* dirp = opendir("/dev/fs");
+  GList* return_list = NULL;
+
+  if(!dirp) {
+	  g_warning("unable to read /dev/fs!");
+	  return NULL;
+  } else {
+	  char filename[9 + NAME_MAX];
+
+	  while(1) {
+		  struct statvfs statbuf;
+		  struct dirent entry;
+		  struct dirent* result;
+
+		  if(readdir_r(dirp, &entry, &result) || result == NULL) {
+			  break;
+		  }
+
+		  strcpy(filename, "/dev/fs/");
+		  strcat(filename, entry.d_name);
+
+		  if(statvfs(filename, &statbuf) == 0) {
+			  GUnixMountEntry* mount_entry = g_new0(GUnixMountEntry, 1);
+
+			  mount_entry->mount_path = g_strdup(statbuf.f_mntonname);
+			  mount_entry->device_path = g_strdup(statbuf.f_mntfromname);
+			  mount_entry->filesystem_type = g_strdup(statbuf.f_fstypename);
+
+			  if(statbuf.f_flag & ST_RDONLY) {
+				  mount_entry->is_read_only = TRUE;
+			  }
+
+			  return_list = g_list_prepend(return_list, mount_entry);
+		  }
+	  }
+
+	  return_list = g_list_reverse(return_list);
+
+	  closedir(dirp);
+  }
+
+  return return_list;
+}
 #else
 #error No _g_get_unix_mounts() implementation for system
 #endif
@@ -972,6 +1031,12 @@
   
   return g_list_reverse (return_list);
 }
+#elif defined(__INTERIX)
+static GList *
+_g_get_unix_mount_points (void)
+{
+	return _g_get_unix_mounts();
+}
 #else
 #error No g_get_mount_table() implementation for system
 #endif
