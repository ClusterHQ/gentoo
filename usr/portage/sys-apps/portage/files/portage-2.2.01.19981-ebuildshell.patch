--- bin/ebuild.sh.orig	2011-09-16 15:43:36 +0200
+++ bin/ebuild.sh	2011-09-16 15:51:06 +0200
@@ -95,7 +95,7 @@
 qa_call() {
 	local shopts=$(shopt) OLDIFS="$IFS"
 	local retval
-	"$@"
+	call-ebuildshell "$@"
 	retval=$?
 	set +e
 	[[ $shopts != $(shopt) ]] &&
@@ -466,6 +466,56 @@
 	unset BIN_PATH BIN BODY FUNC_SRC
 fi
 
+call-ebuildshell() {
+	if ! has ebuildshell ${FEATURES}; then
+		"$@"
+		return $?
+	fi
+	(
+		umask 002
+		(
+			(
+				set
+				declare -p
+				declare -fp
+				shopt -p
+				if [[ ${BASH_VERSINFO[0]} == 3 ]]; then
+					export
+				fi
+			) | filter_readonly_variables --filter-for-subshell
+			echo 'declare -r $PORTAGE_READONLY_METADATA $PORTAGE_READONLY_VARS'
+			echo "export PS1='EBUILD ${PN} $1 \$ '" 
+			echo 'unset ENV'
+			echo "type $1"
+			echo "echo WANTED: $@"
+			echo "trap '"
+			echo "umask 002"
+			echo "("
+			echo "	set"
+			echo "	declare -p"
+			echo "	declare -fp"
+			echo "	shopt -p"
+			if [[ ${BASH_VERSINFO[0]} == 3 ]]; then
+				echo "	export"
+			fi
+			echo -n ")"
+			echo -n " | filter_readonly_variables --filter-metadata"
+			echo " > ${T}/ebuildshell-environment-outcome' 0"
+		) > ${T}/ebuildshell-environment
+		chown ${PORTAGE_USER:-portage}:${PORTAGE_GROUP:-portage} "${T}/ebuildshell-environment" &>/dev/null
+		chmod g+w "${T}/ebuildshell-environment" &>/dev/null
+	)
+
+	rm -f "${T}/ebuildshell-environment-outcome" >&/dev/null
+
+	unset BASH_ENV
+	env -i ${BASH} --rcfile "${T}/ebuildshell-environment"  -i || die
+
+	chown ${PORTAGE_USER:-portage}:${PORTAGE_GROUP:-portage} "${T}/ebuildshell-environment-outcome" &>/dev/null
+	chmod g+w "${T}/ebuildshell-environment-outcome" &>/dev/null
+	source "${T}/ebuildshell-environment-outcome" &>/dev/null
+}
+
 # Subshell/helper die support (must export for the die helper).
 export EBUILD_MASTER_PID=$BASHPID
 trap 'exit 1' SIGTERM
--- bin/phase-functions.sh.orig	2011-09-16 15:45:37 +0200
+++ bin/phase-functions.sh	2011-09-16 15:50:10 +0200
@@ -81,7 +81,7 @@
 filter_readonly_variables() {
 	local x filtered_vars
 	local readonly_bash_vars="BASHOPTS BASHPID DIRSTACK EUID
-		FUNCNAME GROUPS PIPESTATUS PPID SHELLOPTS UID"
+		FUNCNAME GROUPS PIPESTATUS PPID SHELLOPTS UID BASH_VERSINFO"
 	local bash_misc_vars="BASH BASH_.* COLUMNS COMP_WORDBREAKS HISTCMD
 		HISTFILE HOSTNAME HOSTTYPE IFS LINENO MACHTYPE OLDPWD
 		OPTERR OPTIND OSTYPE POSIXLY_CORRECT PS4 PWD RANDOM
@@ -90,8 +90,10 @@
 		SANDBOX_DEBUG_LOG SANDBOX_DISABLED SANDBOX_LIB
 		SANDBOX_LOG SANDBOX_ON"
 	local misc_garbage_vars="_portage_filter_opts"
-	filtered_vars="$readonly_bash_vars $bash_misc_vars
-		$PORTAGE_READONLY_VARS $misc_garbage_vars"
+	filtered_vars="$readonly_bash_vars"
+	if ! has --filter-for-subshell $* ; then
+		filtered_vars="$filtered_vars $bash_misc_vars $PORTAGE_READONLY_VARS $misc_garbage_vars"
+	fi
 
 	# Don't filter/interfere with prefix variables unless they are
 	# supported by the current EAPI.
@@ -121,7 +123,11 @@
 			LC_CTYPE LC_MESSAGES LC_MONETARY
 			LC_NUMERIC LC_PAPER LC_TIME"
 	fi
-	if ! has --allow-extra-vars $* ; then
+	if has --filter-metadata $* ; then
+		filtered_vars="$filtered_vars $PORTAGE_READONLY_METADATA"
+	fi
+	if ! has --allow-extra-vars $* &&
+	   ! has --filter-for-subshell $* ; then
 		filtered_vars="
 			${filtered_vars}
 			${PORTAGE_SAVED_READONLY_VARS}
