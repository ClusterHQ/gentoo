--- a/Makefile.am
+++ b/Makefile.am
@@ -25,7 +25,7 @@ iftop_SOURCES = addr_hash.c edline.c hash.c iftop.c ns_hash.c \
 #		 addrs_ioctl.c addrs_dlpi.c dlcommon.c \
 #		 stringmap.c cfgfile.c 
 
-
+iftop_LDADD = $(NCURSES_LIBS)
 
 noinst_HEADERS = addr_hash.h ether.h ethertype.h extract.h hash.h iftop.h \
                  integers.h ip.h llc.h ns_hash.h options.h resolver.h \
--- a/configure.in
+++ b/configure.in
@@ -350,19 +350,23 @@ dnl a solid chance that mvchgat is a macro, so we can't just use
 dnl AC_SEARCH_LIBS....
 dnl
 
-AC_MSG_CHECKING([for a curses library containing mvchgat])
-oldLIBS=$LIBS
-for curseslib in ncursesw curses ncurses ; do
-    LIBS="$oldLIBS -l$curseslib"
-    AC_TRY_LINK([
+PKG_CHECK_MODULES([NCURSES], [ncursesw], [foundcurseslib="$NCURSES_LIBS"], [
+    PKG_CHECK_MODULES([NCURSES], [ncurses], [foundcurseslib="$NCURSES_LIBS"], [
+        AC_MSG_CHECKING([for a curses library containing mvchgat])
+        oldLIBS=$LIBS
+        for curseslib in ncursesw curses ncurses ; do
+            LIBS="$oldLIBS -l$curseslib"
+            AC_TRY_LINK([
 #include <curses.h>
-        ], [
-        mvchgat(0, 0, 1, A_REVERSE, 0, NULL)
-        ], [
-        foundcurseslib=$curseslib
-        break
-        ])
-done
+                 ], [
+                 mvchgat(0, 0, 1, A_REVERSE, 0, NULL)
+                 ], [
+                 foundcurseslib=-l$curseslib
+                 break
+                 ])
+        done
+    ])
+])
 
 if test x$foundcurseslib = x ; then
     AC_MSG_RESULT([none found])
